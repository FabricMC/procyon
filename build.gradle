import org.gradle.api.artifacts.maven.MavenDeployment

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'

archivesBaseName = 'procyon'

ext.getProcyonVersion = { ->
    final def fallbackVersion = "1.0-SNAPSHOT";
    final def versionFilePath = rootDir.canonicalPath + "/Procyon.Core/src/main/java/com/strobel/Procyon.java";
    final def versionFile = new File(versionFilePath);

    if (versionFile.exists()) {
        try {
            final def String fileContents = new File(versionFilePath).getText('UTF-8')
            final def matcher = fileContents =~ /VERSION\s*=\s*"([^"]+)"/

            if (matcher.find()) {
                return matcher.group(1).trim()
            }
        }
        catch (final Throwable ignored) {
        }
    }

    logger.warn("wARNING: Could not resolve version from source; falling back to '$fallbackVersion'.")

    return fallbackVersion
}

def ENV = System.getenv()
final def procyonVersion = getProcyonVersion() + "." + (ENV.BUILD_NUMBER ?: "local")

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'

    buildDir = rootDir.canonicalPath + "/build/" + rootProject.relativePath(projectDir.canonicalPath)

    version procyonVersion

    group 'org.bitbucket.mstrobel'
    sourceCompatibility = 1.7    // JDK version

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile 'junit:junit:4.11'
    }
}

//
// The root project is empty and doesn't need any tasks.
//
rootProject.tasks.each { it.enabled = false }

subprojects {
    apply plugin: 'maven'

    archivesBaseName = 'procyon-' + it.name.split("\\.")[1].toLowerCase()

    jar {
        metaInf {
            from 'License.txt'
            from 'README.md'
        }
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    if (project.name != "Procyon.Decompiler") {
        javadoc {
            options.encoding = 'UTF-8'
        }

        artifacts {
            archives jar
            archives javadocJar
            archives sourcesJar
        }

        uploadArchives {
            repositories.mavenDeployer {
				if (project.hasProperty('mavenPass')) {
					repository(url: 'http://mavenupload.modmuss50.me/') {
						authentication(userName: 'buildslave', password: project.getProperty('mavenPass'))
					}
				}

                pom {
                    groupId = project.group
                    version = project.version
                    artifactId = project.archivesBaseName

                    project {
                        name project.archivesBaseName
                        packaging 'jar'
                        description 'Procyon'
                        url 'https://bitbucket.org/mstrobel/procyon'

                        scm {
                            url 'https://bitbucket.org/mstrobel/procyon'
                            connection 'scm:hg:https://hg@bitbucket.org/mstrobel/procyon'
                            developerConnection 'scm:hg:https://mstrobel@bitbucket.org/mstrobel/procyon'
                        }

                        issueManagement {
                            system 'jira'
                            url 'https://bitbucket.org/mstrobel/procyon/issues'
                        }

                        licenses {
                            license {
                                name 'The Apache Software License, Version 2.0'
                                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                                distribution 'repo'
                            }
                        }

                        developers {
                            developer {
                                id 'mstrobel'
                                name 'Mike Strobel'
                                roles {
                                    role 'owner'
                                    role 'packager'
                                    role 'developer'
                                }
                            }
                        }

                        dependencies {
                            dependency {
                                groupId 'junit'
                                artifactId 'junit'
                                version '4.11'
                                scope 'test'
//                                optional = true
                            }
                        }
                    }
                }
            }
        }
    }
}

