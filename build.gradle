import org.gradle.api.artifacts.maven.MavenDeployment

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'

archivesBaseName = 'procyon'

ext.getProcyonVersion = { ->
    final def fallbackVersion = "1.0-SNAPSHOT";
    final def versionFilePath = rootDir.canonicalPath + "/Procyon.Core/src/main/java/com/strobel/Procyon.java";
    final def versionFile = new File(versionFilePath);

    if (versionFile.exists()) {
        try {
            final def String fileContents = new File(versionFilePath).getText('UTF-8')
            final def matcher = fileContents =~ /VERSION\s*=\s*"([^"]+)"/

            if (matcher.find()) {
                return matcher.group(1).trim()
            }
        }
        catch (final Throwable ignored) {
        }
    }

    logger.warn("wARNING: Could not resolve version from source; falling back to '$fallbackVersion'.")

    return fallbackVersion
}

def ENV = System.getenv()
final def procyonVersion = getProcyonVersion() + "." + (ENV.BUILD_NUMBER ?: "local")

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'

    buildDir = rootDir.canonicalPath + "/build/" + rootProject.relativePath(projectDir.canonicalPath)

    version procyonVersion

    group 'org.bitbucket.mstrobel'
    sourceCompatibility = 1.7    // JDK version

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile 'junit:junit:4.11'
    }
}

//
// The root project is empty and doesn't need any tasks.
//
rootProject.tasks.each { it.enabled = false }
rootProject.uploadArchives.enabled = false

subprojects {
    apply plugin: 'maven'
	apply plugin: 'maven-publish'

    archivesBaseName = 'procyon-' + it.name.split("\\.")[1].toLowerCase()

    jar {
        metaInf {
            from 'License.txt'
            from 'README.md'
        }
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }


    if (project.name != "Procyon.Decompiler") {
        javadoc {
            options.encoding = 'UTF-8'
        }
		
		publishing {
			publications {
				maven(MavenPublication) {
					groupId project.group
					artifactId project.archivesBaseName
					version project.version

					from components.java
					
					artifact javadocJar {
						classifier "javadoc"
					}

					artifact sourcesJar {
						classifier "sources"
					}
				}
			}
			repositories {
				maven {
					url "http://mavenupload.modmuss50.me/"
					if (project.hasProperty('mavenPass')) {
						credentials {
							username 'buildslave'
							password project.getProperty('mavenPass')
						}
					}
				}
			}
		}

    }
}

